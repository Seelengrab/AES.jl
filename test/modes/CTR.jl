using Rijndael, BenchmarkTools, Test

# Key
k = [0x2b,0x7e,0x15,0x16,0x28,0xae,0xd2,0xa6,0xab,0xf7,0x15,0x88,0x09,0xcf,0x4f,0x3c]
# IV/Nonce
iv = [0x00,0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x08,0x09,0x0a,0x0b,0x0c,0x0d,0x0e,0x0f]
# Plaintext
p = [0x6b,0xc1,0xbe,0xe2,0x2e,0x40,0x9f,0x96,0xe9,0x3d,0x7e,0x11,0x73,0x93,0x17,0x2a,
    0x6b,0xc1,0xbe,0xe2,0x2e,0x40,0x9f,0x96,0xe9,0x3d,0x7e,0x11,0x73,0x93,0x17,0x2a,
    0x6b,0xc1,0xbe,0xe2,0x2e,0x40,0x9f,0x96,0xe9,0x3d,0x7e,0x11,0x73,0x93,0x17,0x2a,
    0x6b,0xc1,0xbe,0xe2,0x2e,0x40,0x9f,0x96,0xe9,0x3d,0x7e,0x11,0x73,0x93,0x17,0x2a,
    0x6b,0xc1,0xbe,0xe2,0x2e,0x40,0x9f,0x96,0xe9,0x3d,0x7e,0x11,0x73,0x93,0x17,0x2a,
    0x6b,0xc1,0xbe,0xe2,0x2e,0x40,0x9f,0x96,0xe9,0x3d,0x7e,0x11,0x73,0x93,0x17,0x2a,
    0x6b,0xc1,0xbe,0xe2,0x2e,0x40,0x9f,0x96,0xe9,0x3d,0x7e,0x11,0x73,0x93,0x17,0x2a]
# Expected Ciphertext
c = [0x3b,0x3f,0xd9,0x2e,0xb7,0x2d,0xad,0x20,0x33,0x34,0x49,0xf8,0xe8,0x3c,0xfb,0x4a,
    0xc4,0xe0,0x30,0xac,0xa9,0xa3,0x0c,0x3c,0x33,0x0c,0x35,0xf5,0x08,0x64,0xb4,0x75,
    0xfd,0x2b,0x31,0x6b,0x2b,0xc3,0x0f,0xd4,0x50,0xf3,0xfe,0x89,0x7f,0x1e,0x31,0x1a,
    0xb0,0x0b,0x3f,0xe0,0xf7,0x28,0x38,0xd1,0x93,0xa2,0xc7,0xc2,0x58,0x23,0x4e,0xed,
    0x73,0x12,0x9e,0x3c,0x76,0x17,0x69,0x9b,0x07,0xfe,0x80,0x1c,0x34,0xcd,0x2b,0x43,
    0xc7,0x8f,0x96,0x32,0xdc,0x61,0x46,0x19,0x01,0x15,0xa7,0xa5,0xfe,0x8a,0x8a,0xfc,
    0x57,0xed,0xb6,0x20,0x8e,0x32,0xd8,0x85,0xff,0x82,0xa5,0x41,0xee,0xcb,0x70,0x2f]
# Cipher
cipher = AES(key_length=128, mode=Rijndael.CTR, key=Rijndael.AES128Key(k), iv=iv)
@test cipher.mode == Rijndael.CTR

## Encryption
# Correctness Test
ans = encrypt(p, cipher)
@test ans.data == c

# Benchmark Test
@btime encrypt(p, cipher)

## Decryption
ct = Rijndael.AESCipherText(c, cipher.iv, Rijndael.get_key_length(cipher), Rijndael.CTR, typeof(p))
ans = decrypt(ct, cipher)
@test ans == p

@btime decrypt(ct, cipher)